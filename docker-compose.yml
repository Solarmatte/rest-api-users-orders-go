version: '3.8'

services:
  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-rest-api-db}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kvant_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      # Сервер
      SERVER_ADDRESS: ${SERVER_ADDRESS:-:8080}
      JWT_SECRET: ${JWT_SECRET:-example_secret}
      APP_ENV: production

      # База данных (названия совпадают с тем, что читает config.LoadConfig)
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-rest-api-db}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - kvant_network

volumes:
  db_data:


networks:
  kvant_network:
