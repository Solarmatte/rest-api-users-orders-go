basePath: /
definitions:
  internal_handlers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  internal_handlers.UserListResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/kvant_task_internal_services.UserResponse'
        type: array
    type: object
  internal_handlers.ValidationErrorResponse:
    properties:
      errors:
        items:
          type: string
        type: array
    type: object
  kvant_task_internal_services.CreateOrderRequest:
    properties:
      price:
        type: number
      product:
        type: string
      quantity:
        type: integer
    required:
    - price
    - product
    - quantity
    type: object
  kvant_task_internal_services.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  kvant_task_internal_services.OrderResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      price:
        type: number
      product:
        type: string
      quantity:
        type: integer
      user_id:
        type: integer
    type: object
  kvant_task_internal_services.RegisterRequest:
    description: Данные для создания нового пользователя
    properties:
      age:
        type: integer
      email:
        type: string
      name:
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
    required:
    - age
    - email
    - name
    - password
    type: object
  kvant_task_internal_services.TokenResponse:
    properties:
      token:
        type: string
    type: object
  kvant_task_internal_services.UpdateRequest:
    properties:
      age:
        type: integer
      email:
        type: string
      name:
        minLength: 2
        type: string
    type: object
  kvant_task_internal_services.UserResponse:
    properties:
      age:
        type: integer
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: you@example.com
    name: Junior Golang Developer
  description: REST API на Go + PostgreSQL с авторизацией, Swagger и фильтрацией
  title: API для управления пользователями и заказами
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Возвращает JWT по email и паролю.
      parameters:
      - description: Данные для логина
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/kvant_task_internal_services.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешная аутентификация
          schema:
            $ref: '#/definitions/kvant_task_internal_services.TokenResponse'
        "400":
          description: Некорректные данные для входа
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "401":
          description: Неверный email или пароль
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "422":
          description: Ошибка валидации данных
          schema:
            $ref: '#/definitions/internal_handlers.ValidationErrorResponse'
      summary: Аутентификация
      tags:
      - Пользователи
  /users:
    get:
      description: Пагинация и фильтрация по возрасту.
      parameters:
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 10
        description: Размер страницы
        in: query
        name: limit
        type: integer
      - description: Минимальный возраст
        in: query
        name: min_age
        type: integer
      - description: Максимальный возраст
        in: query
        name: max_age
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список пользователей
          schema:
            $ref: '#/definitions/internal_handlers.UserListResponse'
        "401":
          description: Неавторизованный доступ
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Список пользователей
      tags:
      - Пользователи
    post:
      consumes:
      - application/json
      description: Создаёт нового пользователя и возвращает его данные.
      parameters:
      - description: Данные пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/kvant_task_internal_services.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Пользователь успешно создан
          schema:
            $ref: '#/definitions/kvant_task_internal_services.UserResponse'
        "400":
          description: Пользователь с таким email уже существует
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "422":
          description: Ошибка валидации данных
          schema:
            $ref: '#/definitions/internal_handlers.ValidationErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
      summary: Создать пользователя
      tags:
      - Пользователи
  /users/{id}:
    delete:
      description: Удаляет пользователя по ID.
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Удаление пользователя
      tags:
      - Пользователи
    get:
      description: Возвращает данные пользователя по ID.
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/kvant_task_internal_services.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получить пользователя
      tags:
      - Пользователи
    put:
      consumes:
      - application/json
      description: Обновляет имя, email или возраст.
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      - description: Данные для обновления
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/kvant_task_internal_services.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/kvant_task_internal_services.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Обновление пользователя
      tags:
      - Пользователи
  /users/{id}/orders:
    get:
      description: Возвращает все заказы указанного пользователя.
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список заказов
          schema:
            items:
              $ref: '#/definitions/kvant_task_internal_services.OrderResponse'
            type: array
        "400":
          description: Некорректный ID пользователя
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Список заказов
      tags:
      - Заказы
    post:
      consumes:
      - application/json
      description: Создаёт новый заказ для указанного пользователя.
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      - description: Данные заказа
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/kvant_task_internal_services.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Заказ успешно создан
          schema:
            $ref: '#/definitions/kvant_task_internal_services.OrderResponse'
        "400":
          description: Некорректный ID пользователя
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "422":
          description: Ошибка валидации данных заказа
          schema:
            $ref: '#/definitions/internal_handlers.ValidationErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Создание заказа
      tags:
      - Заказы
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
